{
  "name": "React-console",
  "tagline": "Simple react console emulator",
  "body": "# react-console\r\nSimple React console emulator\r\n\r\nInspired by [chrisdone/jquery-console](https://github.com/chrisdone/jquery-console).\r\n\r\n## Example\r\n\r\nSimple prompt that echoes back input:\r\n\r\n```javascript\r\nlet EchoConsole = React.createClass({\r\n\techo: function(text) {\r\n\t\tthis.refs.console.log(text);\r\n\t\tthis.refs.console.return();\r\n\t},\r\n\trender: function() {\r\n\t\treturn <Console ref=\"console\" handler={this.echo}/>;\r\n\t}\r\n});\r\n```\r\n\r\nInclude `dist/react-console.js` and `dist/react-console.css` in your html.\r\n\r\nSee `example/echo.tsx` for an example using Typescript.\r\n\r\n\r\n## Props\r\n\r\nProperties you can pass to the console element\r\n\r\n| Prop\t\t\t\t| Type\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Description\r\n| ----\t\t\t\t| ----\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| ----\r\n| autofocus?\t\t| bool\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Autofocus the console on component mount.\r\n| cancel?\t\t\t| function(): any\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Function that should stop execution of the current command and call `this.return()`.\r\n| complete?\t\t\t| function(words: string[], cursor: number, prompt: string): string[]\t| Return a list of possible completions given a list of (`words`), index of the word containing the cursor (`cursor`) , and the full prompt text (`prompt`).\r\n| continue?\t\t\t| function(prompt: string): bool\t\t\t\t\t\t\t\t\t\t| Return a boolean indicating whether to continue asking for user input on a newline given the current prompt text (`prompt`).\r\n| handler\t\t\t| function(command: string): any\t\t\t\t\t\t\t\t\t\t| Handle a command (`command`), logging data with `this.log()` or `this.logX()`, and calling `this.return()` when finished.\r\n| promptLabel?\t\t| string\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| String displayed to prompt user for input.\r\n| welcomeMessage?\t| string\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Initial message displayed after mount.\r\n\r\n## Public members\r\n\r\n| Member\t| Type\t\t\t\t\t\t\t\t\t\t\t\t| Description\r\n| ----\t\t| ----\t\t\t\t\t\t\t\t\t\t\t\t| ----\r\n| log\t\t| function(...messages: any): void\t\t\t\t\t| Log messages to the console. If string, print the value, otherwise, print the JSON value of the message.\r\n| logX\t\t| function(type: string, ...messages: any): void\t| Log messages of a particular type to the console. The messages will be given the class `react-console-message-{type}`.\r\n| return\t| function(): void\t\t\t\t\t\t\t\t\t| Signal the current command has finished and a new prompt should be displayed.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}